name: Run Build and Test (.NET, Angular)

on:
  push:
    branches:
      - develop
      - azure-dev
      - azure-qa
      - master
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    
    steps:
      - name: 📝 Fetch Sources 📝
        uses: actions/checkout@v2

      - name: ⚙ Setup .NET 6.0 SDK ⚙
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: ⚙ Setup Node.js 16.x ⚙
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: 🔃 Install Node Modules 🔃
        run: |
          cd ./MangoAPI.Client
          npm ci

      - name: 🛠 Build Angular Project (Production) 🛠
        run: |
          cd ./MangoAPI.Client
          npm run build --production

      - name: 🔆 Lint Angular Project 🔆
        run: |
          cd ./MangoAPI.Client
          npm run lint

      - name: 🔄 Restore Nuget Packages 🔄
        run: dotnet restore

      - name: 🛠 Build .NET Solution 🛠
        run: dotnet build --no-restore /p:ContinuousIntegrationBuild=true

      # - name: 🚀 Login to the container registry 🚀
      #   run: echo "$DOCKER_PASSWORD" | docker login docker.io -u "$DOCKER_USERNAME" --password-stdin
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐋 Run SQLServer docker container 🐋
        run: |
          docker run -e 'SA_PASSWORD=x2yiJt!Fs' -e ACCEPT_EULA=y --name mango-mssql-db --hostname mango-mssql-db -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-latest

      - name: 🕔 Wait for database to be ready 🕔
        run: bash ./build/docker/mssql-docker/wait-for-mssql.sh
        env:
          CONTAINER_NAME: mango-mssql-db
          PASSWORD_DATABASE: x2yiJt!Fs
      
      # - name: 🕔 Wait for database to be ready (Old Variant) 🕔
      #   run: pwsh -c ./build/docker/mssql-docker/wait_database.ps1

      - name: Buillding `efbundle` & Applying EF Core migrations (EXPEREMENTAL method)
        run: |
          cd ./MangoAPI.Infrastructure
          dotnet tool install --global dotnet-ef
          dotnet ef migrations bundle --self-contained -r linux-x64
          ./efbundle
          rm efbundle
        env:
          MANGO_DATABASE_URL: ${{ secrets.MANGO_INTEGRATION_TESTS_DATABASE_URL }}
          MANGO_SEED_PASSWORD: ${{ secrets.MANGO_SEED_PASSWORD }}

      - name: ✅ Run Integration Tests (Codecov) ✅
        run: dotnet test MangoAPI.IntegrationTests/MangoAPI.IntegrationTests.csproj --no-build --verbosity normal /p:CollectCoverage=true /p:Exclude="[*DataAccess]*" /p:CoverletOutputFormat=opencover
        env:
          MANGO_JWT_ISSUER: ${{ secrets.MANGO_JWT_ISSUER }}
          MANGO_JWT_AUDIENCE: ${{ secrets.MANGO_JWT_AUDIENCE }}
          MANGO_JWT_SIGN_KEY: ${{ secrets.MANGO_JWT_SIGN_KEY }}
          MANGO_EMAIL_NOTIFICATIONS_ADDRESS: ${{ secrets.MANGO_EMAIL_NOTIFICATIONS_ADDRESS }}
          MANGO_FRONTEND_ADDRESS: ${{ secrets.MANGO_FRONTEND_ADDRESS }}
          MANGO_DATABASE_URL: ${{ secrets.MANGO_DATABASE_URL }}
          MANGO_SEED_PASSWORD: ${{ secrets.MANGO_SEED_PASSWORD }}
          MANGO_BLOB_URL: ${{ secrets.MANGO_BLOB_URL }}
          MANGO_BLOB_CONTAINER: ${{ secrets.MANGO_BLOB_CONTAINER }}
          MANGO_BLOB_ACCESS: ${{ secrets.MANGO_BLOB_ACCESS }}
          MANGO_MAILGUN_API_KEY: ${{ secrets.MANGO_MAILGUN_API_KEY }}
          MANGO_MAILGUN_API_BASE_URL: ${{ secrets.MANGO_MAILGUN_API_BASE_URL }}
          MANGO_MAILGUN_API_DOMAIN: ${{ secrets.MANGO_MAILGUN_API_DOMAIN }}
          MANGO_INTEGRATION_TESTS_DATABASE_URL: ${{ secrets.MANGO_INTEGRATION_TESTS_DATABASE_URL }}

      - name: ✴ Publish coverage report to Codecov ✴
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: web, server
          fail_ci_if_error: false
          verbose: true

      - name: ✅ Run Integration Tests (Coveralls) ✅
        run: dotnet test MangoAPI.IntegrationTests/MangoAPI.IntegrationTests.csproj  /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
        env:
          MANGO_JWT_ISSUER: ${{ secrets.MANGO_JWT_ISSUER }}
          MANGO_JWT_AUDIENCE: ${{ secrets.MANGO_JWT_AUDIENCE }}
          MANGO_JWT_SIGN_KEY: ${{ secrets.MANGO_JWT_SIGN_KEY }}
          MANGO_EMAIL_NOTIFICATIONS_ADDRESS: ${{ secrets.MANGO_EMAIL_NOTIFICATIONS_ADDRESS }}
          MANGO_FRONTEND_ADDRESS: ${{ secrets.MANGO_FRONTEND_ADDRESS }}
          MANGO_DATABASE_URL: ${{ secrets.MANGO_DATABASE_URL }}
          MANGO_SEED_PASSWORD: ${{ secrets.MANGO_SEED_PASSWORD }}
          MANGO_BLOB_URL: ${{ secrets.MANGO_BLOB_URL }}
          MANGO_BLOB_CONTAINER: ${{ secrets.MANGO_BLOB_CONTAINER }}
          MANGO_BLOB_ACCESS: ${{ secrets.MANGO_BLOB_ACCESS }}
          MANGO_MAILGUN_API_KEY: ${{ secrets.MANGO_MAILGUN_API_KEY }}
          MANGO_MAILGUN_API_BASE_URL: ${{ secrets.MANGO_MAILGUN_API_BASE_URL }}
          MANGO_MAILGUN_API_DOMAIN: ${{ secrets.MANGO_MAILGUN_API_DOMAIN }}
          MANGO_INTEGRATION_TESTS_DATABASE_URL: ${{ secrets.MANGO_INTEGRATION_TESTS_DATABASE_URL }}

      - name: ✨ Publish coverage report to Coveralls ✨
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: MangoAPI.IntegrationTests/TestResults/coverage.info