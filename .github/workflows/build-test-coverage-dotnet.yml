name: Build Test Coverage

on:
  push:
    branches:
      - develop
      - gh-actions-coverage
      - cache

  pull_request:
    branches: [ develop ]

  workflow_dispatch:

jobs:
  build-and-test-dotnet:
    name: Build Test Coverage
    runs-on: ${{ matrix.environment }}
    strategy:
      matrix:
        environment:
          - ubuntu-latest

    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages

    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Setup .NET 6.0 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: NuGet Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}.nuget.${{ hashFiles('**/*.csproj') }}

      - name: Restore Nuget Packages
        run: dotnet restore

      - name: Build .NET Project
        run: |
          dotnet build --no-restore /p:ContinuousIntegrationBuild=true --configuration Release

      - name: Install and Run Azurite
        shell: bash
        run: |
          npm install -g azurite
          mkdir azurite
          azurite --silent --location azurite --debug azurite\debug.log &

      - name: Run SQLServer docker container
        run: |
          docker run -e 'SA_PASSWORD=x2yiJt!Fs' -e ACCEPT_EULA=y --name mango-mssql-db --hostname mango-mssql-db -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-latest

      - name: Wait for container
        run: pwsh ./scripts/wait_database.ps1

      - name: Run Integration Tests
        run: |
          dotnet test MangoAPI.IntegrationTests/MangoAPI.IntegrationTests.csproj --configuration Release --no-build
        env:
          CollectCoverage: true
          CoverletOutputFormat: lcov
          ThresholdStat: total
          ThresholdType: Line
          CoverletOutput: TestResults/
      #          dotnet test MangoAPI.IntegrationTests/MangoAPI.IntegrationTests.csproj -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=lcov

      - name: Publish coverage report to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: 'MangoAPI.IntegrationTests/TestResults/coverage.info'

      - name: Publish .NET Project
        run: |
          dotnet publish "MangoAPI.Presentation/MangoAPI.Presentation.csproj" --configuration "Release" --output "publish"

      - name: Drop Artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'drop'
          path: 'publish'
  
  resharper-analysis:
    name: Resharper Analysis
    runs-on: ${{ matrix.environment }}
    strategy:
      matrix:
        environment:
          - ubuntu-latest

    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages

    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Setup .NET 6.0 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: NuGet Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}.nuget.${{ hashFiles('**/*.csproj') }}

      - name: Restore Nuget Packages
        run: dotnet restore

      - name: Build .NET Project
        run: |
          dotnet build --no-restore /p:ContinuousIntegrationBuild=true --configuration Release

      - name: Inspect code
        uses: muno92/resharper_inspectcode@1.6.7
        with:
          solutionPath: ./MangoAPI.sln
        continue-on-error: true