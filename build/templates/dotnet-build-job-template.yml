parameters:
  - name: buildConfiguration
    displayName: 'Build Configuration'
    type: string
    default: 'Release'
    values:
      - Release
      - Debug

  - name: backendProjectPath
    displayName: 'Backend project path'
    type: string
    default: './MangoAPI.Presentation/MangoAPI.Presentation.csproj'

  - name: frontEndProjectPath
    displayName: 'Frontend project path'
    type: string
    default: './MangoAPI.Client'

  - name: buildFolder
    displayName: 'Folder containing angular build files'
    type: string
    default: './MangoAPI.Presentation/wwwroot'

jobs:
  - job: 'Build_Pack'
    displayName: 'Build & Drop Artifact'
    steps:
      - checkout: self
        fetchDepth: 0
        
      - task: UseDotNet@2
        displayName: 'Install .NET 6.x SDK'
        inputs:
          packageType: sdk
          version: 6.x

      - task: gitversion/setup@0
        displayName: 'GitVersion Setup'
        inputs:
          versionSpec: '5.9.x'

      - task: gitversion/execute@0
        displayName: 'GitVersion Execute'
        
      - script: |
          echo "Upcoming semantic version: $(SemVer)"
        displayName: 'Print semantic version'
          
      - task: NodeTool@0
        inputs:
          versionSpec: '16.x'
        displayName: 'Install Node.js 16.x'
        
      - script: |
          npm install -g typescript@4.8
        displayName: 'Install Typescript 4.8'
        
      - script: |
          node -v
        displayName: 'Print node version'
        
      - script: |
          npm -v
        displayName: 'Print npm version'

      - task: Npm@1
        displayName: 'Install Angular CLI'
        inputs:
          command: 'custom'
          customCommand: 'install -g @angular/cli@15.2.2'

      - script: |
          npm ci
        displayName: 'Npm ci'
        workingDirectory: '${{ parameters.frontEndProjectPath }}'
        
      - script: |
          ng version
        displayName: 'Print Angular version'
        
      - script: |
          tsc -p tsconfig.json
        displayName: 'Compile TS files'
        workingDirectory: '${{ parameters.frontEndProjectPath }}'

      - script: |
          ng build
        displayName: 'Angular build'
        workingDirectory: '${{ parameters.frontEndProjectPath }}'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet restore'
        inputs:
          command: 'restore'
          projects: '${{ parameters.backendProjectPath }}'
          arguments: '--verbosity minimal'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet build ${{ parameters.buildConfiguration }}'
        inputs:
          command: 'build'
          projects: '${{ parameters.backendProjectPath }}'
          arguments: '-c ${{ parameters.buildConfiguration }} -p:Version=$(SemVer) --no-restore'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Publish'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '${{ parameters.backendProjectPath }}'
          arguments: '-p:Version=$(SemVer) -c ${{ parameters.buildConfiguration }} -o $(Build.ArtifactStagingDirectory)/${{ parameters.buildConfiguration }} --no-build'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
